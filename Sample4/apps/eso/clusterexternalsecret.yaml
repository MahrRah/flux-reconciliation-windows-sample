apiVersion: external-secrets.io/v1beta1
kind: ClusterExternalSecret
metadata:
  name: acr-pull-cluster-external-secret
spec:
  externalSecretName: acr-pull-external-secret
  # This is a basic label selector to select the namespaces to deploy ExternalSecrets to.
  # you can read more about them here https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#resources-that-support-set-based-requirements
  namespaceSelector:
    matchLabels:
      # The external secret and the regular secret are injected into all namespaces with this label
      eso-inject-acr-pull-secret: "true"
  # How often the ClusterExternalSecret should reconcile itself
  # This will decide how often to check and make sure that the ExternalSecrets exist in the matching namespaces
  refreshTime: "1m"
  # This is the spec of the ExternalSecrets to be created
  externalSecretSpec:
    # RefreshInterval is the amount of time before the values reading again from the SecretStore provider
    refreshInterval: 1h
    # SecretStoreRef defines which SecretStore to use when fetching the secret data
    secretStoreRef:
      kind: ClusterSecretStore
      name: cluster-azkv-secret-store

    # the target describes the secret that shall be created
    target:
      name: acr-pull
      # Owner means that the secret is created and controlled by ESO
      creationPolicy: Owner
      # Specify a blueprint for the resulting Kind=Secret
      template:
        type: kubernetes.io/dockerconfigjson
        engineVersion: v2
        # Construct a valid docker pull secret from the service principal Client ID and secret
        templateFrom:
          - configMap:
              # name of the configmap to pull in
              name: docker-config-json
              # here you define the keys that should be used as template
              items:
                - key: .dockerconfigjson
    # Data defines the connection between the Kubernetes Secret keys and the Provider data
    data:
      # The client ID and secret should be of a service principal that is authorized to pull images
      # from the ACR referenced in the dockerconfigjson
      - secretKey: spsecret
        remoteRef:
          key: secret/EDGE-DEVICE-SP-SECRET
      - secretKey: spclientid
        remoteRef:
          key: secret/EDGE-DEVICE-SP-CLIENTID
